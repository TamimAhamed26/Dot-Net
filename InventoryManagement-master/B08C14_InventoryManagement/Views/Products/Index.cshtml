@model IEnumerable<B08C14_InventoryManagement.Data.Product>
@{
    ViewData["Title"] = "Products";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary mb-0">
            <i class="bi bi-box-seam me-2"></i>Products
        </h2>
        <button id="btnCreate" class="btn btn-primary shadow-sm rounded-pill px-4">
            <i class="bi bi-plus-circle me-1"></i> Create New
        </button>
    </div>

    <div class="card shadow-sm border-0 rounded-4">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table align-middle table-hover mb-0" id="productsTable">
                    <thead class="table-light text-center align-middle">
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Category</th>
                            <th>Supplier</th>
                            <th>Updated At</th>
                            <th>Updated By</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.Id">
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>@item.Price.ToString("C")</td>
                                <td>
                                    <span class="badge bg-@(item.StockQuantity <= 5 ? "danger" : "success")">
                                        @item.StockQuantity
                                    </span>
                                </td>
                                <td>@item.Category?.Name</td>
                                <td>@item.Supplier?.Name</td>
                                <td>@item.UpdatedAt</td>
                                <td>@item.UpdatedBy</td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-warning btnEdit" data-id="@item.Id">
                                            <i class="bi bi-pencil-square"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-info btnStock" data-id="@item.Id" title="Adjust Stock">
                                            <i class="bi bi-plus-slash-minus"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger btnDelete" data-id="@item.Id">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Product Create/Edit Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header bg-primary text-white rounded-top-4">
                <h5 class="modal-title fw-semibold" id="modalTitle">Product</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="productForm">
                    <input type="hidden" id="Id" name="Id" />
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" id="Name" name="Name" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Price</label>
                            <input type="number" step="0.01" class="form-control" id="Price" name="Price" required />
                        </div>
                        <div class="col-md-12">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" id="Description" name="Description" rows="2"></textarea>
                        </div>

                        <!-- Stock Quantity shown only when creating -->
                        <div class="col-md-6" id="stockQuantityDiv">
                            <label class="form-label">Initial Stock Quantity</label>
                            <input type="number" class="form-control" id="StockQuantity" name="StockQuantity" required />
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">Category</label>
                            <select class="form-select" id="CategoryId" name="CategoryId" required>
                                <option value="">Select Category</option>
                                @foreach (var cat in ViewBag.Categories as List<B08C14_InventoryManagement.Data.Categoty>)
                                {
                                    <option value="@cat.Id">@cat.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Supplier</label>
                            <select class="form-select" id="SupplierId" name="SupplierId" required>
                                <option value="">Select Supplier</option>
                                @foreach (var sup in ViewBag.Suppliers as List<B08C14_InventoryManagement.Data.Supplier>)
                                {
                                    <option value="@sup.Id">@sup.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="text-danger mt-3" id="formErrors"></div>
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light border rounded-pill" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="btnSave" class="btn btn-primary rounded-pill px-4">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Stock Adjustment Modal -->
<div class="modal fade" id="stockModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header bg-info text-white rounded-top-4">
                <h5 class="modal-title fw-semibold">Adjust Stock</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="StockProductId" />
                <div class="mb-3">
                    <label class="form-label">Adjustment (Use negative for reduction)</label>
                    <input type="number" class="form-control" id="Adjustment" required />
                </div>
                <div class="text-danger" id="stockError"></div>
            </div>
            <div class="modal-footer border-0">
                <button class="btn btn-light border rounded-pill" data-bs-dismiss="modal">Cancel</button>
                <button id="btnUpdateStock" class="btn btn-success rounded-pill px-4">Update</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {

            // Create
            $('#btnCreate').click(function () {
                $('#productForm')[0].reset();
                $('#Id').val('');
                $('#modalTitle').text('Create Product');
                $('#stockQuantityDiv').show(); // Show StockQuantity only for Create
                $('#productModal').modal('show');
            });

            // Edit
            $('.btnEdit').click(function () {
                var id = $(this).data('id');
                $.get('@Url.Action("GetProduct")', { id: id }, function (res) {
                    if (res.success) {
                        $('#Id').val(res.data.id);
                        $('#Name').val(res.data.name);
                        $('#Description').val(res.data.description);
                        $('#Price').val(res.data.price);
                        $('#CategoryId').val(res.data.categoryId);
                        $('#SupplierId').val(res.data.supplierId);
                        $('#modalTitle').text('Edit Product');
                        $('#stockQuantityDiv').hide(); // Hide StockQuantity on Edit
                        $('#productModal').modal('show');
                    } else showToast(res.message, "error");
                });
            });

            // Save (Create/Edit)
            $('#btnSave').click(function () {
                var formData = $('#productForm').serialize();
                var id = $('#Id').val();
                var url = id ? '@Url.Action("Edit")' : '@Url.Action("Create")';
                $.post(url, formData, function (res) {
                    if (res.success) {
                        $('#productModal').modal('hide');
                        showToast(res.message, "success");
                        setTimeout(() => location.reload(), 1000);
                    } else $('#formErrors').text(res.message);
                });
            });

            // Adjust Stock
            $('.btnStock').click(function () {
                $('#StockProductId').val($(this).data('id'));
                $('#Adjustment').val('');
                $('#stockModal').modal('show');
            });

            $('#btnUpdateStock').click(function () {
                var id = $('#StockProductId').val();
                var adj = $('#Adjustment').val();
                $.post('@Url.Action("AdjustStock")', { id: id, adjustment: adj }, function (res) {
                    if (res.success) {
                        $('#stockModal').modal('hide');
                        showToast(res.message, "success");
                        setTimeout(() => location.reload(), 1000);
                    } else $('#stockError').text(res.message);
                });
            });

            // Delete
            $('.btnDelete').click(function () {
                if (!confirm("Are you sure to delete this product?")) return;
                var id = $(this).data('id');
                $.post('@Url.Action("DeleteConfirmed")', { id: id }, function (res) {
                    if (res.success) {
                        showToast("Deleted successfully!", "success");
                        setTimeout(() => location.reload(), 1000);
                    } else showToast(res.message, "error");
                });
            });
        });
    </script>
}
