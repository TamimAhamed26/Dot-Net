@model IEnumerable<B08C14_InventoryManagement.Data.Order>
@using B08C14_InventoryManagement.Data
@using B08C14_InventoryManagement.Models
@{
    ViewData["Title"] = "Orders";
    var products = ViewBag.Products as List<Product> ?? new List<Product>();
    var customers = ViewBag.Customers as List<Customer> ?? new List<Customer>();
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary mb-0">
            <i class="bi bi-basket3 me-2"></i>Orders
        </h2>
        <button class="btn btn-success rounded-pill shadow-sm px-4" id="btnAddOrder">
            <i class="bi bi-plus-circle me-1"></i> Create New Order
        </button>
    </div>

    <div class="card shadow-sm rounded-4 border-0">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table align-middle table-hover mb-0">
                    <thead class="table-light text-center">
                        <tr>
                            <th style="width: 60px;">Details</th>
                            <th>Date</th>
                            <th>Total Amount</th>
                            <th>Status</th>
                            <th>Customer</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr class="order-row" data-order-id="@order.Id">
                                <td class="text-center">
                                    <button class="btn btn-sm btn-outline-secondary toggle-details" data-order-id="@order.Id">
                                        <i class="bi bi-plus-lg"></i>
                                    </button>
                                </td>
                                <td>@order.OrderDate.ToShortDateString()</td>
                                <td class="order-total">@order.TotalAmount.ToString("C")</td>
                                <td>
                                    @switch (order.Status)
                                    {
                                        case OrderStatus.Pending:
                                            <span class="badge bg-warning text-dark">Pending</span>
                                            ; break;
                                        case OrderStatus.Processing:
                                            <span class="badge bg-primary">Processing</span>
                                            ; break;
                                        case OrderStatus.Shipped:
                                            <span class="badge bg-info">Shipped</span>
                                            ; break;
                                        case OrderStatus.Delivered:
                                            <span class="badge bg-success">Delivered</span>
                                            ; break;
                                        case OrderStatus.Cancelled:
                                            <span class="badge bg-danger">Cancelled</span>
                                            <br />
                                            <small class="text-muted fst-italic">
                                                @(string.IsNullOrEmpty(order.CancellationReason) ? "No reason specified" : order.CancellationReason)
                                            </small>
                                            <br />
                                            <button class="btn btn-sm btn-outline-secondary mt-1 btn-edit-reason" data-order-id="@order.Id">
                                                <i class="bi bi-pencil-square"></i> Edit Reason
                                            </button>
                                            ; break;
                                    }
                                </td>

                                <td>@order.Customer?.Name</td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Processing)
                                        {
                                            <button class="btn btn-sm btn-outline-primary btn-add-product" data-order-id="@order.Id" title="Add Product">
                                                <i class="bi bi-plus-circle"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger btn-delete-order" data-order-id="@order.Id" title="Delete Order">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                            @if (order.Status == OrderStatus.Pending)
                                            {
                                                <button class="btn btn-sm btn-outline-success btn-send" data-order-id="@order.Id" title="Send for Delivery">
                                                    <i class="bi bi-truck"></i>
                                                </button>
                                            }
                                        }
                                    </div>
                                </td>
                            </tr>

                            <tr class="order-details-row" style="display:none;">
                                <td colspan="6">
                                    <div class="table-responsive">
                                        <table class="table table-sm table-hover mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Product</th>
                                                    <th>Qty</th>
                                                    <th>Unit Price</th>
                                                    <th>Total</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var d in order.OrderDetails)
                                                {
                                                    <tr data-id="@d.Id" data-order-id="@order.Id">
                                                        <td>
                                                            @d.Product?.Name
                                                            @Html.Raw(d.IsShipped ? " <span class='badge bg-success ms-1'>Shipped</span>" : "")
                                                        </td>
                                                        <td>@d.Quantity</td>
                                                        <td>@d.UnitPrice.ToString("C")</td>
                                                        <td>@d.TotalPrice.ToString("C")</td>
                                                        <td class="text-center">
                                                            <div class="btn-group">
                                                                @if (order.Status == OrderStatus.Pending || (order.Status == OrderStatus.Processing && !d.IsShipped))
                                                                {
                                                                    <button class="btn btn-sm btn-outline-info btn-edit" data-id="@d.Id" title="Edit">
                                                                        <i class="bi bi-pencil-square"></i>
                                                                    </button>
                                                                    <button class="btn btn-sm btn-outline-danger btn-delete" data-id="@d.Id" title="Delete">
                                                                        <i class="bi bi-trash"></i>
                                                                    </button>
                                                                    @if (!d.IsShipped)
                                                                    {
                                                                        <button class="btn btn-sm btn-outline-success btn-send-detail" data-id="@d.Id" title="Send">
                                                                            <i class="bi bi-truck"></i>
                                                                        </button>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="text-success">Shipped</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">Locked</span>
                                                                }
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- Modal: Edit Cancellation Reason -->
<div class="modal fade" id="editReasonModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow-sm">
            <div class="modal-header bg-danger text-white rounded-top-4">
                <h5 class="modal-title">Edit Cancellation Reason</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="ReasonOrderId" />
                <div class="form-group mb-3">
                    <label class="form-label">Reason</label>
                    <textarea class="form-control" id="CancellationReason" rows="3" placeholder="Enter reason..."></textarea>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger rounded-pill px-4" id="btnSaveReason">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal: Order / Add Product -->
<div class="modal fade" id="orderModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content rounded-4 shadow-sm">
            <form id="orderForm">
                <div class="modal-header bg-primary text-white rounded-top-4">
                    <h5 class="modal-title" id="modalTitle">Order Detail</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="Id" />
                    <input type="hidden" id="OrderId" />
                    <input type="hidden" id="IsNewOrder" value="false" />

                    <!-- New Order Fields -->
                    <div id="newOrderFields" style="display: none;">
                        <div class="row g-3 mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Customer</label>
                                <select class="form-select" id="CustomerId">
                                    <option value="">Select Customer</option>
                                    @foreach (var c in customers)
                                    {
                                        <option value="@c.Id">@c.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Order Date</label>
                                <input type="date" class="form-control" id="OrderDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Status</label>
                                <input type="text" class="form-control" id="Status" value="Pending" readonly />
                            </div>
                        </div>
                    </div>

                    <!-- Product Detail Fields -->
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Product</label>
                            <select class="form-select" id="ProductId">
                                <option value="">Select Product</option>
                                @foreach (var p in products)
                                {
                                    <option value="@p.Id">@p.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Quantity</label>
                            <input type="number" class="form-control" id="Quantity" value="1" min="1" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Unit Price</label>
                            <input type="number" class="form-control" id="UnitPrice" value="0" readonly step="0.01" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Total Price</label>
                            <input type="number" class="form-control" id="TotalPrice" value="0" readonly step="0.01" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary rounded-pill px-4" id="btnSave">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            function updateTotal() {
                let qty = parseFloat($("#Quantity").val()) || 0;
                let price = parseFloat($("#UnitPrice").val()) || 0;
                $("#TotalPrice").val((qty * price).toFixed(2));
            }

            function clearModal() {
                $("#Id").val(0);
                $("#OrderId").val('');
                $("#ProductId").val('');
                $("#Quantity").val(1);
                $("#UnitPrice").val(0);
                $("#TotalPrice").val(0);
                $("#IsNewOrder").val("false");
                $("#CustomerId").val('');
                $("#OrderDate").val('@DateTime.Now.ToString("yyyy-MM-dd")');
                $("#newOrderFields").hide();
                $("#CustomerId").prop("required", false);
                $("#modalTitle").text("Order Detail");
            }

            $("#ProductId").change(function () {
                let productId = $(this).val();
                if (productId) {
                    $.get("/OrderDetails/GetPrice?productId=" + productId, function (res) {
                        if (res && res.success) {
                            $("#UnitPrice").val(res.price.toFixed(2));
                            updateTotal();
                        } else {
                            $("#UnitPrice").val(0);
                            $("#TotalPrice").val(0);
                            showToast("Failed to fetch product price.", "error");
                        }
                    }).fail(function () {
                        showToast("Error fetching product price.", "error");
                    });
                } else {
                    $("#UnitPrice").val(0);
                    $("#TotalPrice").val(0);
                }
            });

            $("#Quantity").on("input", updateTotal);

            $("#btnAddOrder").click(function () {
                clearModal();
                $("#IsNewOrder").val("true");
                $("#newOrderFields").show();
                $("#CustomerId").prop("required", true);
                $("#modalTitle").text("New Order");
                $("#orderModal").modal("show");
            });

            $(document).on("click", ".btn-add-product", function (e) {
                e.stopPropagation();
                clearModal();
                let orderId = $(this).data("order-id");
                $("#OrderId").val(orderId);
                $("#IsNewOrder").val("false");
                $("#newOrderFields").hide();
                $("#CustomerId").prop("required", false);
                $("#modalTitle").text("Add Product");
                $("#orderModal").modal("show");
            });

            $(document).on("click", ".btn-edit", function () {
                let id = $(this).data("id");
                $.get("/OrderDetails/GetById/" + id, function (res) {
                    if (res) {
                        $("#Id").val(res.id);
                        $("#OrderId").val(res.orderId);
                        $("#ProductId").val(res.productId);
                        $("#Quantity").val(res.quantity);
                        $("#IsNewOrder").val("false");
                        $("#newOrderFields").hide();
                        $("#CustomerId").prop("required", false);
                        $("#modalTitle").text("Edit Order Detail");

                        $.get("/OrderDetails/GetPrice?productId=" + res.productId, function (p) {
                            if (p && p.success) {
                                $("#UnitPrice").val(p.price.toFixed(2));
                                $("#TotalPrice").val((res.quantity * p.price).toFixed(2));
                            }
                        }).fail(function () {
                            showToast("Error fetching product price.", "error");
                        });

                        $("#orderModal").modal("show");
                    } else {
                        showToast("Order detail not found.", "warning");
                    }
                }).fail(function () {
                    showToast("Error fetching order detail.", "error");
                });
            });

            $("#btnSave").click(function () {
                let isNewOrder = $("#IsNewOrder").val() === "true";
                if (isNewOrder) {
                    if (!$('#CustomerId').val()) {
                        showToast("Please select a customer.", "warning");
                        return;
                    }
                    if (!$('#ProductId').val()) {
                        showToast("Please select a product.", "warning");
                        return;
                    }
                } else {
                    if (!$('#OrderId').val() || !$('#ProductId').val()) {
                        showToast("Invalid order or product.", "error");
                        return;
                    }
                }

                let data = {
                    Id: parseInt($("#Id").val()) || 0,
                    OrderId: parseInt($("#OrderId").val()) || 0,
                    ProductId: parseInt($("#ProductId").val()) || 0,
                    Quantity: parseInt($("#Quantity").val()) || 0,
                    UnitPrice: parseFloat($("#UnitPrice").val()) || 0,
                    TotalPrice: parseFloat($("#TotalPrice").val()) || 0
                };

                if (isNewOrder) {
                    data.CustomerId = parseInt($("#CustomerId").val());
                    data.OrderDate = $("#OrderDate").val();
                }

                let url = isNewOrder ? "/OrderDetails/CreateOrder" : "/OrderDetails/Update";

                $.post(url, data, function (res) {
                    if (res.success) {
                        $("#orderModal").modal("hide");
                        showToast("Order saved successfully!", "success");
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast(res.message || "Error saving data.", "error");
                    }
                }).fail(function () {
                    showToast("Error occurred while saving.", "error");
                });
            });

            $(document).on("click", ".btn-delete", function () {
                let id = $(this).data("id");
                const deleteModalHtml = `
                <div class="modal fade" id="deleteConfirmModal" tabindex="-1">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title text-danger">Confirm Delete</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete this order detail?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>`;

                $("body").append(deleteModalHtml);
                let deleteModal = new bootstrap.Modal(document.getElementById("deleteConfirmModal"));
                deleteModal.show();

                $("#confirmDelete").click(function () {
                    $.post("/OrderDetails/Delete/" + id, function (res) {
                        if (res.success) {
                            showToast("Order detail deleted!", "success");
                            setTimeout(() => location.reload(), 800);
                        } else {
                            showToast(res.message || "Error deleting data.", "error");
                        }
                        deleteModal.hide();
                    }).fail(function () {
                        showToast("Error occurred while deleting.", "error");
                        deleteModal.hide();
                    });
                });

                $('#deleteConfirmModal').on('hidden.bs.modal', function () {
                    $(this).remove();
                });
            });

            $(document).on("click", ".btn-send", function () {
                let orderId = $(this).data("order-id");
                if (!confirm("Send this order for delivery?")) return;

                $.post("/OrderDetails/SendOrder", { orderId: orderId }, function (res) {
                    if (res.success) {
                        showToast("Order sent for delivery!", "success");
                        setTimeout(() => location.reload(), 800);
                    } else {
                        showToast(res.message || "Error updating order.", "error");
                    }
                }).fail(function () {
                    showToast("Error occurred while sending order.", "error");
                });
            });
                    $(document).on("click", ".btn-edit-reason", function () {
            let orderId = $(this).data("order-id");
            $("#ReasonOrderId").val(orderId);
            let reasonText = $(this).closest("td").find("small").text().trim();
            $("#CancellationReason").val(reasonText === "No reason specified" ? "" : reasonText);
            $("#editReasonModal").modal("show");
        });

        $("#btnSaveReason").click(function () {
            let orderId = $("#ReasonOrderId").val();
            let reason = $("#CancellationReason").val().trim();

            $.post("/OrderDetails/UpdateCancellationReason", { orderId: orderId, reason: reason }, function (res) {
                if (res.success) {
                    showToast(res.message, "success");
                    $("#editReasonModal").modal("hide");
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showToast(res.message, "error");
                }
            }).fail(function () {
                showToast("Error updating cancellation reason.", "error");
            });
        });

            $(document).on("click", ".btn-send-detail", function () {
                let detailId = $(this).data("id");
                if (!confirm("Send this product for delivery?")) return;

                $.post("/OrderDetails/SendDetail", { detailId: detailId }, function (res) {
                    if (res.success) {
                        showToast("Product sent for delivery!", "success");
                        setTimeout(() => location.reload(), 800);
                    } else {
                        showToast(res.message || "Error sending product.", "error");
                    }
                }).fail(function () {
                    showToast("Error occurred while sending product.", "error");
                });
            });
                    $(document).on("click", ".btn-delete-order", function () {
            let orderId = $(this).data("order-id");

            const confirmHtml = `
            <div class="modal fade" id="deleteOrderModal" tabindex="-1">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title text-danger">Confirm Order Deletion</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            Deleting this order will also delete all its product details and restore stock. Are you sure?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" id="confirmOrderDelete">Delete Order</button>
                        </div>
                    </div>
                </div>
            </div>`;

            $("body").append(confirmHtml);
            let modal = new bootstrap.Modal(document.getElementById("deleteOrderModal"));
            modal.show();

            $("#confirmOrderDelete").click(function () {
                $.post("/OrderDetails/DeleteOrder", { orderId: orderId }, function (res) {
                    if (res.success) {
                        showToast(res.message, "success");
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast(res.message || "Error deleting order.", "error");
                    }
                    modal.hide();
                }).fail(function () {
                    showToast("Error occurred while deleting order.", "error");
                    modal.hide();
                });
            });

            $('#deleteOrderModal').on('hidden.bs.modal', function () {
                $(this).remove();
            });
        });

            $(document).on("click", ".toggle-details", function (e) {
                e.stopPropagation();
                let $btn = $(this);
                let $icon = $btn.find("i");
                let $detailsRow = $btn.closest("tr").next(".order-details-row");
                $detailsRow.slideToggle(300,
                    function()
                    {
                      if ($detailsRow.is(":visible"))
                    { $icon.removeClass("bi-plus-lg").addClass("bi-dash-lg"); }
                      else { $icon.removeClass("bi-dash-lg").addClass("bi-plus-lg");
                      }
                   });
                });
        });
    </script>
}