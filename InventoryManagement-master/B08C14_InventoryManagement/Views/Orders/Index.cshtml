@model IEnumerable<B08C14_InventoryManagement.Data.Order>
@using B08C14_InventoryManagement.Data
@using B08C14_InventoryManagement.Models
@{
    ViewData["Title"] = "Orders";
    var products = ViewBag.Products as List<Product> ?? new List<Product>();
    var customers = ViewBag.Customers as List<Customer> ?? new List<Customer>();
}

<h1>Orders</h1>

<button class="btn btn-success mb-2" id="btnAddOrder">Create New Order</button>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Date</th>
            <th>Total Amount</th>
            <th>Status</th>
            <th>Customer</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr class="order-row" data-order-id="@order.Id">
                <td>@order.OrderDate.ToShortDateString()</td>
                <td class="order-total">@order.TotalAmount</td>
                <td>@order.Status</td>
                <td>@order.Customer?.Name</td>
                <td>
                    <button class="btn btn-sm btn-primary btn-add-product" data-order-id="@order.Id">Add Product</button>
                </td>
            </tr>
            <tr class="order-details-row" style="display:none;">
                <td colspan="5">
                    <table class="table table-sm table-bordered">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Qty</th>
                                <th>Unit Price</th>
                                <th>Total</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var d in order.OrderDetails)
                            {
                                <tr data-id="@d.Id" data-order-id="@order.Id">
                                    <td>@d.Product?.Name</td>
                                    <td>@d.Quantity</td>
                                    <td>@d.UnitPrice</td>
                                    <td>@d.TotalPrice</td>
                                    <td>
                                        <button class="btn btn-sm btn-info btn-edit" data-id="@d.Id">Edit</button>
                                        <button class="btn btn-sm btn-danger btn-delete" data-id="@d.Id">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="orderModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form id="orderForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Order Detail</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="Id" />
                    <input type="hidden" id="OrderId" />
                    <input type="hidden" id="IsNewOrder" value="false" />

                    <!-- New Order Fields -->
                    <div id="newOrderFields" style="display: none;">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Customer</label>
                                <select class="form-control" id="CustomerId">
                                    <option value="">Select Customer</option>
                                    @foreach (var c in customers)
                                    {
                                        <option value="@c.Id">@c.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Order Date</label>
                                <input type="date" class="form-control" id="OrderDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Status</label>
                                <input type="text" class="form-control" id="Status" value="Pending" readonly />
                            </div>
                        </div>
                    </div>

                    <!-- Detail Fields -->
                    <div class="row">
                        <div class="col-md-4">
                            <label class="form-label">Product</label>
                            <select class="form-control" id="ProductId">
                                <option value="">Select Product</option>
                                @foreach (var p in products)
                                {
                                    <option value="@p.Id">@p.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Quantity</label>
                            <input type="number" class="form-control" id="Quantity" value="1" min="1" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Unit Price</label>
                            <input type="number" class="form-control" id="UnitPrice" value="0" readonly step="0.01" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Total Price</label>
                            <input type="number" class="form-control" id="TotalPrice" value="0" readonly step="0.01" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btnSave">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            function updateTotal() {
                let qty = parseFloat($("#Quantity").val()) || 0;
                let price = parseFloat($("#UnitPrice").val()) || 0;
                $("#TotalPrice").val((qty * price).toFixed(2));
            }

            function clearModal() {
                $("#Id").val(0);
                $("#OrderId").val('');
                $("#ProductId").val('');
                $("#Quantity").val(1);
                $("#UnitPrice").val(0);
                $("#TotalPrice").val(0);
                $("#IsNewOrder").val("false");
                $("#CustomerId").val('');
                $("#OrderDate").val('@DateTime.Now.ToString("yyyy-MM-dd")');
                $("#newOrderFields").hide();
                $("#CustomerId").prop("required", false);
                $("#modalTitle").text("Order Detail");
            }

            $("#ProductId").change(function () {
                let productId = $(this).val();
                if (productId) {
                    $.get("/Order/GetPrice?productId=" + productId, function (res) {
                        if (res && res.success) {
                            $("#UnitPrice").val(res.price.toFixed(2));
                            updateTotal();
                        } else {
                            $("#UnitPrice").val(0);
                            $("#TotalPrice").val(0);
                        }
                    });
                } else {
                    $("#UnitPrice").val(0);
                    $("#TotalPrice").val(0);
                }
            });

            $("#Quantity").on("input", updateTotal);

            $("#btnAddOrder").click(function () {
                clearModal();
                $("#IsNewOrder").val("true");
                $("#newOrderFields").show();
                $("#CustomerId").prop("required", true);
                $("#modalTitle").text("New Order");
                $("#orderModal").modal("show");
            });

            $(document).on("click", ".btn-add-product", function () {
                clearModal();
                let orderId = $(this).data("order-id");
                $("#OrderId").val(orderId);
                $("#IsNewOrder").val("false");
                $("#newOrderFields").hide();
                $("#CustomerId").prop("required", false);
                $("#modalTitle").text("Add Product");
                $("#orderModal").modal("show");
            });

            $(document).on("click", ".btn-edit", function () {
                let id = $(this).data("id");
                $.get("/OrderDetails/GetById/" + id, function (res) {
                    if (res) {
                        $("#Id").val(res.id);
                        $("#OrderId").val(res.orderId);
                        $("#ProductId").val(res.productId);
                        $("#Quantity").val(res.quantity);
                        $("#IsNewOrder").val("false");
                        $("#newOrderFields").hide();
                        $("#CustomerId").prop("required", false);
                        $("#modalTitle").text("Edit Order Detail");

                        $.get("/OrderDetails/GetPrice?productId=" + res.productId, function (p) {
                            if (p && p.success) {
                                $("#UnitPrice").val(p.price.toFixed(2));
                                $("#TotalPrice").val((res.quantity * p.price).toFixed(2));
                            }
                        });

                        $("#orderModal").modal("show");
                    }
                });
            });

            $("#btnSave").click(function () {
                let isNewOrder = $("#IsNewOrder").val() === "true";
                if (isNewOrder) {
                    if (!$('#CustomerId').val()) {
                        alert("Please select a customer.");
                        return;
                    }
                    if (!$('#ProductId').val()) {
                        alert("Please select a product.");
                        return;
                    }
                } else {
                    if (!$('#OrderId').val() || !$('#ProductId').val()) {
                        alert("Invalid order or product.");
                        return;
                    }
                }

                let data = {
                    Id: parseInt($("#Id").val()) || 0,
                    OrderId: parseInt($("#OrderId").val()) || 0,
                    ProductId: parseInt($("#ProductId").val()) || 0,
                    Quantity: parseInt($("#Quantity").val()) || 0,
                    UnitPrice: parseFloat($("#UnitPrice").val()) || 0,
                    TotalPrice: parseFloat($("#TotalPrice").val()) || 0
                };

                let url = isNewOrder ? "/OrderDetails/CreateOrder" : "/OrderDetails/Update";
                if (isNewOrder) {
                    data.CustomerId = parseInt($("#CustomerId").val());
                    data.OrderDate = $("#OrderDate").val();
                }

                $.post(url, data, function (res) {
                    if (res.success) {
                        $("#orderModal").modal("hide");
                        location.reload();
                    } else {
                        alert(res.message || "Error saving data");
                    }
                }).fail(function () {
                    alert("Error occurred while saving.");
                });
            });

            $(document).on("click", ".btn-delete", function () {
                if (!confirm("Are you sure?")) return;
                let id = $(this).data("id");
                $.post("/OrderDetails/Delete/" + id, function (res) {
                    if (res.success) {
                        location.reload();
                    } else {
                        alert(res.message || "Error deleting data");
                    }
                }).fail(function () {
                    alert("Error occurred while deleting.");
                });
            });

            $(document).on("click", ".order-row", function (e) {
                if (!$(e.target).hasClass('btn')) {
                    $(this).next(".order-details-row").toggle();
                }
            });

        });
    </script>
}
